buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
        classpath "org.grails.plugins:views-gradle:1.1.6"
    }
}

version "0.1"
group "json.api.grails.reference"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"
apply plugin:"codenarc"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "mysql:mysql-connector-java:5.1.45"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "com.intuit.karate:karate-junit4:0.6.2"
    testCompile "com.intuit.karate:karate-apache:0.6.2"
    testCompile "net.masterthought:cucumber-reporting:3.14.0"
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'ch.qos.logback:logback-core:1.2.3'
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}

sourceSets {
    integrationTest {
        resources {
            srcDir file('src/integration-test/java')
            exclude '**/*.java'
        }
    }
}

test {
    reports {
        junitXml.destination = file("$buildDir/reports/test/xml/")
        html.destination = file("$buildDir/reports/test/html/")
    }
}

integrationTest {
    systemProperty "cucumber.options", System.properties.getProperty("cucumber.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }

    reports {
        junitXml.destination = file("$buildDir/reports/test/xml/")
    }
}

mergeTestReports {
    destinationDir = file("$buildDir/reports/test/html/")
}

codenarc {
    toolVersion = '1.0'
    config = resources.text.fromFile('grails-app/conf/codenarc-ruleset.groovy')
    ignoreFailures = true

    codenarcMain {
        exclude "**/Application.groovy"
        exclude "**/BootStrap.groovy"
        exclude "**/UrlMappings.groovy"

        reports {
            html {
                enabled = true
                destination = file("${codenarc.reportsDir}/codenarc.html")
            }

            xml {
                enabled =  true
                destination = file("${codenarc.reportsDir}/codenarc.xml")
            }
        }
    }
}
